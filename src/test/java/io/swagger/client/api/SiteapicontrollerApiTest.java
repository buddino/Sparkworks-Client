/*
 * SparkWorks Core API
 * Management Service for the SparkWorks Processing Engine
 *
 * OpenAPI spec version: 1.0
 * Contact: info@sparkworks.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.SiteDTO;
import org.junit.Test;

/**
 * API tests for SiteapicontrollerApi
 */
public class SiteapicontrollerApiTest {

    private final SiteapicontrollerApi api = new SiteapicontrollerApi();

    
    /**
     * delete
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUsingDELETE1Test() throws ApiException {
        Long siteId = null;
        // SiteDTO response = api.deleteUsingDELETE1(siteId);

        // TODO: test validations
    }
    
    /**
     * get
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsingGET2Test() throws ApiException {
        Long siteId = null;
        // SiteDTO response = api.getUsingGET2(siteId);

        // TODO: test validations
    }
    
    /**
     * list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsingGET2Test() throws ApiException {
        // SiteListDTO response = api.listUsingGET2();

        // TODO: test validations
    }
    
    /**
     * post
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postUsingPOSTTest() throws ApiException {
        SiteDTO siteDTO = null;
        // SiteDTO response = api.postUsingPOST(siteDTO);

        // TODO: test validations
    }
    
    /**
     * update
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUsingPOST1Test() throws ApiException {
        Long siteId = null;
        SiteDTO siteDTO = null;
        // SiteDTO response = api.updateUsingPOST1(siteId, siteDTO);

        // TODO: test validations
    }
    
}
